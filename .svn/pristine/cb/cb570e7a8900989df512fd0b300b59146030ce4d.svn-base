package com.me.mygdxgame;

import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;

/**
 * http://www.java-gaming.org/index.php?topic=25685.0
 *
 */
public class Game1 implements ApplicationListener {

    	private static int        SCREEN_WIDTH = -1;	
    	private static int        SCREEN_HEIGHT = -1;	
        private static final int        FRAME_COLS = 2;         // #1
        private static final int        FRAME_ROWS = 2;         // #2
        
//        Animation                       walkAnimation;          // #3
      Animation                       zombieWalkLeft;
      Animation                       zombieWalkRight;
        Texture                         walkSheet;              // #4
        TextureRegion[]                 walkFrames;             // #5
        SpriteBatch                     spriteBatch;            // #6
//        TextureRegion                   currentFrame;           // #7
        TextureRegion                   currentFrameWalkLeft;           // #7
        TextureRegion                   currentFrameWalkRight;           // #7
       TextureRegion[][] tmp;
        float stateTime;                                        // #8
        
        @Override
        public void create() {
	        	SCREEN_WIDTH = Gdx.graphics.getWidth();
	        	SCREEN_HEIGHT = Gdx.graphics.getHeight();
        	
//                walkSheet = new Texture(Gdx.files.internal("data/zombie-sprites-level1-128_128.png"));
              walkSheet = new Texture(Gdx.files.internal("data/zombie-sprites-level1.png"));
                tmp = TextureRegion.split(walkSheet, walkSheet.getWidth() / 
FRAME_COLS, walkSheet.getHeight() / FRAME_ROWS);                                // #10
                walkFrames = new TextureRegion[FRAME_COLS * FRAME_ROWS];
                int index = 0;
                for (int i = 0; i < FRAME_ROWS; i++) {
                        for (int j = 0; j < FRAME_COLS; j++) {
                                walkFrames[index++] = tmp[i][j];
                        }
                }
//                walkAnimation = new Animation(0.025f, walkFrames);              // #11
                spriteBatch = new SpriteBatch();                                // #12
//                stateTime = 0f;                                                 // #13

                zombieWalkLeft = new Animation(0.25f, new TextureRegion[]{tmp[0][0],tmp[0][1]});
                zombieWalkRight = new Animation(0.25f, new TextureRegion[]{tmp[1][0],tmp[1][1]});
                
                
        }

        @Override
        public void render() {
                Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);                                            // #14
                stateTime += Gdx.graphics.getDeltaTime();
                currentFrameWalkLeft = zombieWalkLeft.getKeyFrame(stateTime, true);
                currentFrameWalkRight = zombieWalkRight.getKeyFrame(stateTime, true);
                spriteBatch.begin();
                spriteBatch.draw(currentFrameWalkLeft, SCREEN_WIDTH - 50, 10);
                spriteBatch.draw(currentFrameWalkRight, 0, 10);
                spriteBatch.end();
        }

		@Override
		public void resize(int width, int height) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void pause() {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void resume() {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void dispose() {
			// TODO Auto-generated method stub
			
		}
}