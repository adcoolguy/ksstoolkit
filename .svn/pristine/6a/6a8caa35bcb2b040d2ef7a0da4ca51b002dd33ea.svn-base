<html>
<body onkeydown="keyDown(event);this.focus();">
<canvas id='FDT_MAIN_WINDOW_LAYER' style='position: absolute; left: 8px; top: 0px border: 1px gray dashed' width='704' height='480'>Content that is shown to users using browsers that don't support the canvas tag</canvas>
<canvas id='FDT_TEXT_WINDOW_LAYER' style='position: absolute; left: 660px; top: 187px' width='23' height='13' style='border: 1px gray dashed'>Content that is shown to users using browsers that don't support the canvas tag]</canvas>
<SCRIPT type="text/javascript">
</SCRIPT>
<div id='kssTextArea'></div><input type='hidden' value='0' id='kssIntVal'/>
<SCRIPT type="text/javascript">
//------- Machine/script can change the following table to (pre)load the real text dynamically
var componentId = ''
var g_FDT_ListText18575= []
</SCRIPT>

<!-- ------- This Javascript script is generated by KSSTolkit 0.26 and you should not have to change anything after this line --------- -->
<!-- providing the Java implementation -->
<applet id="kss1" codebase="./bin" code="com.google.code.kss.core.util.PackageAccess" name="kss" width="0" height="0"></applet>
<applet id="app1" codebase="./bin" code="com.google.code.kss.adapter.fios.api.PackageAccess" name="app" width="0" height="0"></applet>
<SCRIPT type="text/javascript" src="script/javascript/util/ba-debug.min.js"></script>
<SCRIPT type="text/javascript" src="script/javascript/fdt/FDT.js"></script>
<SCRIPT type="text/javascript" src="script/javascript/fdt/Graphics.js"></script>
<SCRIPT type="text/javascript">
//------- Global variable
g_FDT_Main_Window_Handle = -1
g_FDT_Text_Window_Handle = -1
g_FDT_Screen_Count = 0
g_FDT_First_Screen = 1
g_FDT_Scroll_Up= null
g_FDT_Scroll_Down= null
g_FDT_Scroll_Left= null
g_FDT_Scroll_Right= null
g_FDT_Scroll_XOffset = 0
g_FDT_Scroll_YOffset = 0
g_FDT_Scroll_ElementIndex = 1
g_FDT_Scroll_FWDAllowed = true
g_FDT_Scroll_BWDAllowed = true
g_FDT_step = 0
g_FDT_Scroll_FWDClippedAtX = -1
g_FDT_Scroll_FWDClippedAtY = -1
</SCRIPT>
<SCRIPT type="text/javascript">
//------- Font display flag
var FONT_ATTRS_NORMAL = 1
var FONT_ATTRS_ELIPSE = 2 
var FONT_ATTRS_MULTILINE = 4
var FONT_ATTRS_CLEARRECT = 8
var FONT_ATTRS_RIGHT_JUST = 16
var FONT_ATTRS_FADEOUT = 32
var FONT_ATTRS_VERTICAL_BOTTOM_UP = 256
var FONT_ATTRS_VERTICAL_TOP_DOWN = 512
var mainCanvas
var mainContext
var textCanvas
var textContext

debug.setLevel(3)
window.onload = function() {
mainCanvas  = document.getElementById('FDT_MAIN_WINDOW_LAYER')
mainContext = mainCanvas.getContext('2d')
textCanvas  = document.getElementById('FDT_TEXT_WINDOW_LAYER')
textContext = textCanvas.getContext('2d')

	iAttributeID = Graphics.CreateWindowAttrib()
	g_FDT_Main_Window_Handle = Graphics.CreateWindow(FDT_MAIN_WINDOW_LAYER, iAttributeID, 0, 0, 0, 704, 480)
	g_FDT_Text_Window_Handle = Graphics.CreateWindow(FDT_TEXT_WINDOW_LAYER, iAttributeID, 0, g_FDT_Scroll_BWDClippedAtX, g_FDT_Scroll_BWDClippedAtY, g_FDT_Scroll_FWDClippedAtX, g_FDT_Scroll_FWDClippedAtY)
	debug.debug('on load 0')
	FDTScrollerBallScreen1()
	debug.debug('on load 1')
	FDTScrollerBallScreen2()
	debug.debug('on load 2')
	FDTScrollerBallScreen3()
	debug.debug('on load 3')
	FDTScrollerBallScreen4()
	debug.debug('on load 4')
	FDTScrollerBallScreen5()
	debug.debug('on load 5')
	FDTScrollerBallScreen6()
	debug.debug('on load 6')
	FDTScrollerBallScreen7()
	debug.debug('on load 7')
	FDTScrollerBallScreen8()
FDTInitText(1, 1)
	Graphics.UpdateDisplay()
}
g_FDT_Scroll_BWDClippedAtX = 652
g_FDT_Scroll_BWDClippedAtY = 179
g_FDT_Scroll_FWDClippedAtX = 23
g_FDT_Scroll_FWDClippedAtY = 13
function FDTScrollerBallScreenY(y) {
	Err = Graphics.ClearWindow(g_FDT_Main_Window_Handle)
	autoImage = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, autoImage, 652, y, 23, 13, 64)
	rScrollerBlackBackground3 = 13370
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, rScrollerBlackBackground3, 656, 177, 16, 242, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen1() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 179, 23, 13, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen2() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 210, 23, 13, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen3() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 241, 23, 13, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen4() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 272, 23, 13, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen5() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 303, 23, 13, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen6() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 334, 23, 13, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen7() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 365, 23, 13, 64)
	Graphics.UpdateDisplay()
}
function FDTScrollerBallScreen8() {
	ScrollerBallButton2 = 17997
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ScrollerBallButton2, 652, 396, 23, 13, 64)
	Graphics.UpdateDisplay()
}
g_FDT_Last_Screen = 8
// Browser KeyCode Variables
KEY_UP = 38
KEY_DOWN = 40
KEY_LEFT =  37
KEY_RIGHT = 39
KEY_OK = 13
KEY_PAGEUP = 33
KEY_PAGEDOWN = 33
KEY_INFO = 51
// ######################## begin of text scrolling capability ##########################
// Note: most important variables are scene #, key and g_FDT_Scroll_ElementIndex
// ######################################################################################
g_FDT_Screen_Count = g_FDT_Last_Screen	// due to the preview in the onLoad
g_FDT_Scroll_ElementIndex = g_FDT_Last_Screen	// due to the preview in the onLoad; assuming total list items are the same as scene counts
function FDTHandleScrolling(scene, key) {
	g_FDT_Scroll_BWDAllowed = true
	g_FDT_Scroll_FWDAllowed = true

	if(scene == 1 && key == KEY_UP) {
		if(g_FDT_Scroll_ElementIndex <= 1) {
			g_FDT_Scroll_BWDAllowed = false
		}
		if(! g_FDT_Scroll_BWDAllowed) {
			g_FDT_Scroll_ElementIndex = 1
		}else{
			g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex - 1
		}
	}else
	if(key == KEY_UP) {
		g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex - 1
	}

	if(scene == 8 && key == KEY_DOWN) {
		lastElementIndex = GetLastIndex(g_FDT_ListText18575)
		//=== zero element and only at the last row
		if(lastElementIndex <= 0 && g_FDT_Scroll_ElementIndex == 8) {
			g_FDT_Scroll_FWDAllowed = false
		} else
		//=== total data elements less than total rows in UI
		if(lastElementIndex == 5 && g_FDT_Scroll_ElementIndex == lastElementIndex) {
			g_FDT_Scroll_FWDAllowed = false
		} else
		//=== boundary condition i.e. total data elements equals total rows in UI
		if(lastElementIndex > 5 && g_FDT_Scroll_ElementIndex == lastElementIndex) {
			g_FDT_Scroll_FWDAllowed = false
		} else
		//=== total data elements more than total rows in UI
		if(g_FDT_Scroll_ElementIndex -1 == lastElementIndex) {
			g_FDT_Scroll_FWDAllowed = false
		}
		if(!g_FDT_Scroll_FWDAllowed) {
			//leave the index alone, do nothing
			//g_FDT_Scroll_ElementIndex = lastElementIndex
		}else{
			g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex + 1
		}
	}else
	if(key == KEY_DOWN) {
		g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex + 1
	}

	Err = Graphics.ClearWindow(g_FDT_Text_Window_Handle)
}
function FDTHandleScrollingText(scene, key) {
if(scene == 1 && key == KEY_UP && g_FDT_Scroll_ElementIndex >= 1) {
FDTInitText(scene, key, g_FDT_Scroll_ElementIndex)
}else if (scene == 8-1 && key == KEY_UP && g_FDT_Scroll_ElementIndex == 8-1) {
FDTInitText(scene, key, g_FDT_Scroll_ElementIndex -2 + (-1))
}else if (scene == 8 && key == KEY_DOWN && g_FDT_Scroll_ElementIndex >= 8+1) {
FDTGetNextText(scene, key, g_FDT_Scroll_ElementIndex)
}else if (scene == 8 && key == KEY_OK && g_FDT_Scroll_ElementIndex == 8) {
FDTInitText(scene, key, 1)
}
}
function FDTInitText(pageindex, key, index) {
}
function FDTGetNextText(pageindex, key, index){
}
// ######################## end of text scrolling capability ##########################
function GetLastIndex(t) {
	retVal = -1
	if(typeof(t)!='undefined') {
		retVal = t.length
	}
	return retVal
}
function FDTScrollerBallGetAutoSceneStep() {
	step = offsetAutoScene/g_FDT_Last_Screen
	return step
}
var keyDown = function(event) {
	Graphics.ClearWindow(g_FDT_Text_Window_Handle)
	if(event.keyCode == KEY_UP) {
		if(g_FDT_Screen_Count < g_FDT_First_Screen + 1) {
			g_FDT_Screen_Count = g_FDT_First_Screen
		} else {
			g_FDT_Screen_Count = g_FDT_Screen_Count - 1
		}
		FDTHandleScrolling(g_FDT_Screen_Count, event.keyCode)
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode)
	if(g_FDT_Scroll_BWDAllowed) {
	}
debug.info('back allowed '+JSSafeString(g_FDT_Scroll_BWDAllowed)+' forward allowed '+JSSafeString(g_FDT_Scroll_FWDAllowed))
		debug.info('[ScrollerBall]backw scene'+g_FDT_Screen_Count+' current index='+g_FDT_Scroll_ElementIndex)
	} else if (event.keyCode == KEY_DOWN) {
		if(g_FDT_Screen_Count > g_FDT_Last_Screen - 1) {
			g_FDT_Screen_Count = g_FDT_Last_Screen
		} else {
			g_FDT_Screen_Count = g_FDT_Screen_Count + 1
		}
		FDTHandleScrolling(g_FDT_Screen_Count, event.keyCode)
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode)
	if(g_FDT_Scroll_FWDAllowed) {
	}
debug.info('back allowed '+JSSafeString(g_FDT_Scroll_BWDAllowed)+' forward allowed '+JSSafeString(g_FDT_Scroll_FWDAllowed))
		debug.info('[ScrollerBall]forw scene'+g_FDT_Screen_Count+' current index='+g_FDT_Scroll_ElementIndex)
	} else if (event.keyCode == KEY_LEFT) {
		debug.info('KEY_LEFT do nothing, as it is vertical list view')
	} else if (event.keyCode == KEY_RIGHT) {
		debug.info('KEY_RIGHT do nothing, as it is vertical list view')
	} else if (event.keyCode == KEY_OK) {
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode)
		debug.info('ok')
	} else if (event.keyCode == KEY_INFO) {
			--DrawBackground()
			debug.info('info')
	} else{
		debug.info('special key')
	}
	if(g_FDT_Screen_Count == 1) {
		FDTScrollerBallScreen1()
	}
	if(g_FDT_Screen_Count == 2) {
		FDTScrollerBallScreen2()
	}
	if(g_FDT_Screen_Count == 3) {
		FDTScrollerBallScreen3()
	}
	if(g_FDT_Screen_Count == 4) {
		FDTScrollerBallScreen4()
	}
	if(g_FDT_Screen_Count == 5) {
		FDTScrollerBallScreen5()
	}
	if(g_FDT_Screen_Count == 6) {
		FDTScrollerBallScreen6()
	}
	if(g_FDT_Screen_Count == 7) {
		FDTScrollerBallScreen7()
	}
	if(g_FDT_Screen_Count == 8) {
		FDTScrollerBallScreen8()
	}
	Graphics.UpdateDisplay()
}
function JSGetImageSrc(lImageID) {
var retVal
if(lImageID == 17997) {
retVal = 'img/lua/ScrollerBallButton2.png'
}
else {
retVal = 'D:/Program Files/Verizon/Iris//Img/' + lImageID + '.png'
}
return retVal
}
debug.info('javascript done')
</SCRIPT></body></html>