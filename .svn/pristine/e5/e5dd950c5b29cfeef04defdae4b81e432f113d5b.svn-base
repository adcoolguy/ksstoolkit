<html>
<body onkeydown="keyDown(event);">
<SCRIPT type="text/javascript">
var g_FDT_Text362179= 'Demo Text1';
var g_FDT_Text362221= 'Demo Text1';
var g_FDT_Text362266= 'Demo Text1';
var g_FDT_Text362312= 'Demo Text1';
</SCRIPT>
<SCRIPT type="text/javascript">
//------- Machine/script can change the following table to (pre)load the real text dynamically
var g_FDT_ListText11452= ['Real FiOS Text1','Real FiOS Text2','Real FiOS Text3','Real FiOS Text4','Real FiOS Text5','Real FiOS Text6','7 (second to last element)','8 (last element)'];
</SCRIPT>

<!-- ------- This Javascript script is generated by KSSTolkit 0.25 and you should not have to change anything after this line --------- -->
<!-- providing the Java implementation -->
<applet id="app1" codebase="./bin" code="com.google.code.kss.adapter.fios.api.PackageAccess" name="app" width="0" height="0"></applet>
<applet id="kss1" codebase="./bin" code="com.google.code.kss.core.util.PackageAccess" name="kss" width="0" height="0"></applet>
<SCRIPT type="text/javascript" src="http://github.com/cowboy/javascript-debug/raw/v0.4/ba-debug.min.js"></script>
<SCRIPT type="text/javascript" src="script/javascript/fdt/FDT.js"></script>
<SCRIPT type="text/javascript" src="script/javascript/fdt/Graphics.js"></script>
<SCRIPT type="text/javascript">
//------- Global variable
g_FDT_Main_Window_Handle = -1;
g_FDT_Text_Window_Handle = -1;
g_FDT_Screen_Count = 0;
g_FDT_First_Screen = 1;
g_FDT_Scroll_Up= null;
g_FDT_Scroll_Down= null;
g_FDT_Scroll_Left= null;
g_FDT_Scroll_Right= null;
g_FDT_Scroll_XOffset = 0;
g_FDT_Scroll_YOffset = 0;
g_FDT_Scroll_ElementIndex = 1;
g_FDT_Scroll_FWDAllowed = true;
g_FDT_Scroll_BWDAllowed = true;
g_FDT_Scroll_FWDClippedAtX = -1;
g_FDT_Scroll_FWDClippedAtY = -1;
</SCRIPT>
<!--
g_FDT_Scroll_BWDClippedAtX = 352;
g_FDT_Scroll_BWDClippedAtY = 174;
g_FDT_Scroll_FWDClippedAtX = 329;
g_FDT_Scroll_FWDClippedAtY = 179;
-->
<canvas id='FDT_MAIN_WINDOW_LAYER' style='position: absolute; left: 8px; top: 0px; border: 1px gray dashed' width='704' height='480'>Content that is shown to users using browsers that don't support the canvas tag</canvas>
<canvas id='FDT_TEXT_WINDOW_LAYER' style='position: absolute; left: 352px; top: 174px; border: 1px gray dashed' width='329' height='179'>Content that is shown to users using browsers that don't support the canvas tag]</canvas>
<SCRIPT type="text/javascript">
//------- Font display flag
var FONT_ATTRS_NORMAL = 1;
var FONT_ATTRS_ELIPSE = 2 ;
var FONT_ATTRS_MULTILINE = 4;
var FONT_ATTRS_CLEARRECT = 8;
var FONT_ATTRS_RIGHT_JUST = 16;
var FONT_ATTRS_FADEOUT = 32;
var FONT_ATTRS_VERTICAL_BOTTOM_UP = 256;
var FONT_ATTRS_VERTICAL_TOP_DOWN = 512;
var mainCanvas;
var mainContext;
var textCanvas;
var textContext;

window.onload = function() {
g_FDT_Text362179= 'Demo Text1';
g_FDT_Text362221= 'Demo Text1';
g_FDT_Text362266= 'Demo Text1';
g_FDT_Text362312= 'Demo Text1';
mainCanvas  = document.getElementById('FDT_MAIN_WINDOW_LAYER');
mainContext = mainCanvas.getContext('2d');
textCanvas  = document.getElementById('FDT_TEXT_WINDOW_LAYER');
textContext = textCanvas.getContext('2d');

	iAttributeID = Graphics.CreateWindowAttrib();
	g_FDT_Main_Window_Handle = Graphics.CreateWindow(FDT_MAIN_WINDOW_LAYER, iAttributeID, 0, 0, 0, 704, 480);
	g_FDT_Text_Window_Handle = Graphics.CreateWindow(FDT_TEXT_WINDOW_LAYER, iAttributeID, 0, g_FDT_Scroll_BWDClippedAtX, g_FDT_Scroll_BWDClippedAtY, g_FDT_Scroll_FWDClippedAtX, g_FDT_Scroll_FWDClippedAtY);
	debug.log('on load 0');
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, 11192, 0, 0, 704, 480, 64);
	debug.log('on load 1');
FDTListScreen1();
	debug.log('on load 2');
FDTListScreen1();
	debug.log('on load 3');
	debug.log('on load 4');
	debug.log('on load 5');
	debug.log('on load 6');
	debug.log('on load 7');
	debug.log('on load 8');
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, 11192, 0, 0, 704, 480, 64);
	debug.log('on load 9');
FDTListScreen2();
	debug.log('on load 10');
FDTListScreen2();
	debug.log('on load 11');
	debug.log('on load 12');
	debug.log('on load 13');
	debug.log('on load 14');
	debug.log('on load 15');
	debug.log('on load 16');
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, 11192, 0, 0, 704, 480, 64);
	debug.log('on load 17');
FDTListScreen3();
	debug.log('on load 18');
FDTListScreen3();
	debug.log('on load 19');
	debug.log('on load 20');
	debug.log('on load 21');
	debug.log('on load 22');
	debug.log('on load 23');
	debug.log('on load 24');
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, 11192, 0, 0, 704, 480, 64);
	debug.log('on load 25');
FDTListScreen4();
	debug.log('on load 26');
FDTListScreen4();
	debug.log('on load 27');
	debug.log('on load 28');
	debug.log('on load 29');
	debug.log('on load 30');
	debug.log('on load 31');
FDTInitText(1, 1);
	Graphics.UpdateDisplay();
};
g_FDT_Scroll_BWDClippedAtX = 352;
g_FDT_Scroll_BWDClippedAtY = 174;
g_FDT_Scroll_FWDClippedAtX = 329;
g_FDT_Scroll_FWDClippedAtY = 179;


function FDTListScreen1() {
	List = 12646;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, List, 352, 174, 329, 179, 64);
	ListItemSelected = 10733;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ListItemSelected, 354, 178, 327, 36, 64);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 179+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xffffffff', '0xff990000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362179);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 221+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362221);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 266+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362266);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 312+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362312);
	Graphics.UpdateDisplay();
}
function FDTListScreen2() {
	List = 12646;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, List, 352, 174, 329, 179, 64);
	ListItemSelected = 10733;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ListItemSelected, 354, 220, 327, 36, 64);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 179+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362179);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 312+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362312);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 221+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xffffffff', '0xff990000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362221);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 266+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362266);
	Graphics.UpdateDisplay();
}
function FDTListScreen3() {
	List = 12646;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, List, 352, 174, 329, 179, 64);
	ListItemSelected = 10733;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ListItemSelected, 354, 262, 327, 42, 64);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 266+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xffffffff', '0xff990000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362266);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 221+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362221);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 179+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362179);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 312+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362312);
	Graphics.UpdateDisplay();
}
function FDTListScreen4() {
	List = 12646;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, List, 352, 174, 329, 179, 64);
	ListItemSelected = 10733;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, ListItemSelected, 354, 310, 327, 36, 64);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 312+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xffffffff', '0xff990000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362312);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 221+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362221);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 179+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362179);
	nErr = Graphics.DrawString(iAttributeID, g_FDT_Text_Window_Handle, 362+g_FDT_Scroll_XOffset-g_FDT_Scroll_BWDClippedAtX, 266+g_FDT_Scroll_YOffset-g_FDT_Scroll_BWDClippedAtY, 311, 33, '0xFF333333', '0x00000000', 3, FONT_ATTRS_MULTILINE, g_FDT_Text362266);
	Graphics.UpdateDisplay();
}
function FDTListScreenRectangleOKRegionHandler1() {
	RECT_COLOR = '0xFFff9900';
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,177,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,177,38,1,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,177+38,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352+330,177,38,1,RECT_COLOR);
	Graphics.UpdateDisplay();
}
function FDTListScreenRectangleOKRegionHandler2() {
	RECT_COLOR = '0xFFff9900';
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,219,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,219,38,1,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,219+38,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352+330,219,38,1,RECT_COLOR);
	Graphics.UpdateDisplay();
}
function FDTListScreenRectangleOKRegionHandler3() {
	RECT_COLOR = '0xFFff9900';
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,264,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,264,38,1,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,264+38,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352+330,264,38,1,RECT_COLOR);
	Graphics.UpdateDisplay();
}
function FDTListScreenRectangleOKRegionHandler4() {
	RECT_COLOR = '0xFFff9900';
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,310,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,310,38,1,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352,310+38,330,0,RECT_COLOR);
	Graphics.DrawLine(g_FDT_Main_Window_Handle,352+330,310,38,1,RECT_COLOR);
	Graphics.UpdateDisplay();
}
g_FDT_Last_Screen = 4;
// Browser KeyCode Variables;
KEY_UP = 38;
KEY_DOWN = 40;
KEY_LEFT =  37;
KEY_RIGHT = 39;
KEY_OK = 13;
KEY_PAGEUP = 33;
KEY_PAGEDOWN = 33;
KEY_INFO = 51;
// ######################## begin of text scrolling capability ##########################;
// Note: most important variables are scene #, key and g_FDT_Scroll_ElementIndex;
// ######################################################################################;
g_FDT_Screen_Count = g_FDT_Last_Screen;	// due to the preview in the onLoad;
g_FDT_Scroll_ElementIndex = g_FDT_Last_Screen;	// due to the preview in the onLoad; assuming total list items are the same as scene counts
function FDTHandleScrolling(scene, key) {
	if(scene == 1 && key == KEY_LEFT) {
		if(g_FDT_Scroll_ElementIndex == 1) {
			g_FDT_Scroll_BWDAllowed = false;
		} else {
			g_FDT_Scroll_BWDAllowed = true;
		}
		if(!g_FDT_Scroll_BWDAllowed) {
			g_FDT_Scroll_ElementIndex = 2;
		}
	}

	if(scene == 4 && key == KEY_RIGHT) {
		lastElementIndex = getLastIndex(g_FDT_ListText11452);
		if(g_FDT_Scroll_ElementIndex == lastElementIndex -1) {
			g_FDT_Scroll_FWDAllowed = false;
		} else {
			g_FDT_Scroll_FWDAllowed = true;
		}
		if(!g_FDT_Scroll_FWDAllowed) {
			g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex -1;
		}
	}

	Err = Graphics.ClearWindow(g_FDT_Text_Window_Handle);
}
function FDTHandleScrollingText(scene, key) {
if(scene == 1 && key == KEY_LEFT && g_FDT_Scroll_ElementIndex >= 1) {
FDTInitText(scene, key, g_FDT_Scroll_ElementIndex);
}else if (scene == 4-1 && key == KEY_LEFT && g_FDT_Scroll_ElementIndex == 4-1) {
FDTInitText(scene, key, g_FDT_Scroll_ElementIndex -2);
}else if (scene == 4&& key == KEY_RIGHT && g_FDT_Scroll_ElementIndex >= 4+1) {
FDTGetNextText(scene, key, g_FDT_Scroll_ElementIndex);
}else if (scene == 4 && key == KEY_OK && g_FDT_Scroll_ElementIndex == 4) {
FDTInitText(scene, key, 1);
}
}
function FDTInitText(pageindex, key, index) {
g_FDT_Text362179 = g_FDT_ListText11452[index+0];
g_FDT_Text362221 = g_FDT_ListText11452[index+1];
g_FDT_Text362266 = g_FDT_ListText11452[index+2];
g_FDT_Text362312 = g_FDT_ListText11452[index+3];
}
function FDTGetNextText(pageindex, key, index){
g_FDT_Text362179 = g_FDT_ListText11452[index-3];
g_FDT_Text362221 = g_FDT_ListText11452[index-2];
g_FDT_Text362266 = g_FDT_ListText11452[index-1];
g_FDT_Text362312 = g_FDT_ListText11452[index-0];
}
// ######################## end of text scrolling capability ##########################;
function getLastIndex(t) {
	return t.length;
}
var keyDown = function(event) {
	Graphics.ClearWindow(g_FDT_Text_Window_Handle);
	if(event.keyCode == KEY_UP) {
		debug.log('up');
	} else if (event.keyCode == KEY_DOWN) {
		debug.log('down');
	} else if (event.keyCode == KEY_LEFT) {
		if(g_FDT_Screen_Count < g_FDT_First_Screen + 1) {
			g_FDT_Screen_Count = g_FDT_First_Screen;
			FDTHandleScrolling(g_FDT_Screen_Count, event.keyCode);
		} else {
			g_FDT_Screen_Count = g_FDT_Screen_Count - 1;
		}
		g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex - 1;
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode);
		debug.info('left scene' + g_FDT_Screen_Count + ' current index=' + g_FDT_Scroll_ElementIndex);
	} else if (event.keyCode == KEY_RIGHT) {
		if(g_FDT_Screen_Count > g_FDT_Last_Screen - 1) {
			g_FDT_Screen_Count = g_FDT_Last_Screen;
			FDTHandleScrolling(g_FDT_Screen_Count, event.keyCode);
		} else {
			g_FDT_Screen_Count = g_FDT_Screen_Count + 1;
		}
		g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex + 1;
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode);
		debug.info('right scene' + g_FDT_Screen_Count + ' current index=' + g_FDT_Scroll_ElementIndex);
	} else if (event.keyCode == KEY_OK) {
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode);
		debug.log('ok');
	} else if (event.keyCode == KEY_INFO) {
			--DrawBackground();
			debug.log('info');
	} else{
		debug.log('special key');
	}
	if(g_FDT_Screen_Count == 1) {
		FDTListScreen1();
		if(event.keyCode == KEY_OK) {
			FDTListScreenRectangleOKRegionHandler1();
		}
	}
	if(g_FDT_Screen_Count == 2) {
		FDTListScreen2();
		if(event.keyCode == KEY_OK) {
			FDTListScreenRectangleOKRegionHandler2();
		}
	}
	if(g_FDT_Screen_Count == 3) {
		FDTListScreen3();
		if(event.keyCode == KEY_OK) {
			FDTListScreenRectangleOKRegionHandler3();
		}
	}
	if(g_FDT_Screen_Count == 4) {
		FDTListScreen4();
		if(event.keyCode == KEY_OK) {
			FDTListScreenRectangleOKRegionHandler4();
		}
	}
	Graphics.UpdateDisplay();
}
function JSGetImageSrc(lImageID) {
var retVal
if(lImageID == 12646) {
retVal = 'img/lua/List.png'
}
else if(lImageID == 10733) {
retVal = 'img/lua/ListItemSelected.png'
}
return retVal
}
debug.log('javascript done');
</SCRIPT></body></html>