<html>
<body onkeydown="keyDown(event);this.focus();">
<canvas id='FDT_MAIN_WINDOW_LAYER' style='position: absolute; left: 8px; top: 0px border: 1px gray dashed' width='704' height='480'>Content that is shown to users using browsers that don't support the canvas tag</canvas>
<canvas id='FDT_TEXT_WINDOW_LAYER' style='position: absolute; left: 8px; top: 8px' width='704' height='480' style='border: 1px gray dashed'>Content that is shown to users using browsers that don't support the canvas tag]</canvas>
<SCRIPT type="text/javascript">
</SCRIPT>
<div id='kssTextArea'></div><input type='hidden' value='0' id='kssIntVal'/>
<SCRIPT type="text/javascript">
//------- Machine/script can change the following table to (pre)load the real text dynamically
var componentId = ''
var g_FDT_ListText10584= ['Real FiOS Text1','Real FiOS Text2','Real FiOS Text3','Real FiOS Text4','Real FiOS Text5','Real FiOS Text6','7 (second to last element)','8 (last element)'];
</SCRIPT>

<!-- ------- This Javascript script is generated by KSSTolkit 0.251 and you should not have to change anything after this line --------- -->
<!-- providing the Java implementation -->
<applet id="kss1" codebase="./bin" code="com.google.code.kss.core.util.PackageAccess" name="kss" width="0" height="0"></applet>
<applet id="app1" codebase="./bin" code="com.google.code.kss.adapter.fios.api.PackageAccess" name="app" width="0" height="0"></applet>
<SCRIPT type="text/javascript" src="script/javascript/util/ba-debug.min.js"></script>
<SCRIPT type="text/javascript" src="script/javascript/fdt/FDT.js"></script>
<SCRIPT type="text/javascript" src="script/javascript/fdt/Graphics.js"></script>
<SCRIPT type="text/javascript">
//------- Global variable
g_FDT_Main_Window_Handle = -1;
g_FDT_Text_Window_Handle = -1;
g_FDT_Screen_Count = 0;
g_FDT_First_Screen = 1;
g_FDT_Scroll_Up= null;
g_FDT_Scroll_Down= null;
g_FDT_Scroll_Left= null;
g_FDT_Scroll_Right= null;
g_FDT_Scroll_XOffset = 0;
g_FDT_Scroll_YOffset = 0;
g_FDT_Scroll_ElementIndex = 1;
g_FDT_Scroll_FWDAllowed = true;
g_FDT_Scroll_BWDAllowed = true;
g_FDT_step = 0;
g_FDT_Scroll_FWDClippedAtX = -1;
g_FDT_Scroll_FWDClippedAtY = -1;
</SCRIPT>
<SCRIPT type="text/javascript">
//------- Font display flag
var FONT_ATTRS_NORMAL = 1;
var FONT_ATTRS_ELIPSE = 2 ;
var FONT_ATTRS_MULTILINE = 4;
var FONT_ATTRS_CLEARRECT = 8;
var FONT_ATTRS_RIGHT_JUST = 16;
var FONT_ATTRS_FADEOUT = 32;
var FONT_ATTRS_VERTICAL_BOTTOM_UP = 256;
var FONT_ATTRS_VERTICAL_TOP_DOWN = 512;
var mainCanvas;
var mainContext;
var textCanvas;
var textContext;

debug.setLevel(3)
window.onload = function() {
mainCanvas  = document.getElementById('FDT_MAIN_WINDOW_LAYER');
mainContext = mainCanvas.getContext('2d');
textCanvas  = document.getElementById('FDT_TEXT_WINDOW_LAYER');
textContext = textCanvas.getContext('2d');

	iAttributeID = Graphics.CreateWindowAttrib();
	g_FDT_Main_Window_Handle = Graphics.CreateWindow(FDT_MAIN_WINDOW_LAYER, iAttributeID, 0, 0, 0, 704, 480);
	g_FDT_Text_Window_Handle = Graphics.CreateWindow(FDT_TEXT_WINDOW_LAYER, iAttributeID, 0, g_FDT_Scroll_BWDClippedAtX, g_FDT_Scroll_BWDClippedAtY, g_FDT_Scroll_FWDClippedAtX, g_FDT_Scroll_FWDClippedAtY);
	debug.debug('on load 0');
	FDTLoginScreen1()
	debug.debug('on load 1');
	debug.debug('on load 2');
	debug.debug('on load 3');
	debug.debug('on load 4');
	debug.debug('on load 5');
	debug.debug('on load 6');
	FDTLoginScreen2()
	debug.debug('on load 7');
	debug.debug('on load 8');
	debug.debug('on load 9');
	debug.debug('on load 10');
	debug.debug('on load 11');
FDTInitText(1, 1);
	Graphics.UpdateDisplay();
};
g_FDT_Scroll_BWDClippedAtX = 0;
g_FDT_Scroll_BWDClippedAtY = 0;
g_FDT_Scroll_FWDClippedAtX = 704;
g_FDT_Scroll_FWDClippedAtY = 480;
function FDTLoginScreen1() {
	SampleFiOSBackground = 10376;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSBackground, 0, 0, 704, 480, 64);
	SampleFiOSRightFooter = 18251;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSRightFooter, 352, 124, 329, 319, 64);
	SampleFiOSRightContHeader_MyCalendar = 11753;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSRightContHeader_MyCalendar, 352, 127, 329, 47, 64);
	SampleFiOSRightNaviHeader_MyCalendar = 15497;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSRightNaviHeader_MyCalendar, 352, 81, 329, 46, 64);
	List = 12646;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, List, 352, 174, 329, 179, 64);
	Login11 = 15046;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, Login11, 355, 356, 322, 81, 64);
	Graphics.UpdateDisplay();
}
function FDTLoginScreen2() {
	SampleFiOSBackground = 10376;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSBackground, 0, 0, 704, 480, 64);
	SampleFiOSRightFooter = 18251;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSRightFooter, 352, 124, 329, 319, 64);
	SampleFiOSRightContHeader_MyCalendar = 11753;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSRightContHeader_MyCalendar, 352, 127, 329, 47, 64);
	SampleFiOSRightNaviHeader_MyCalendar = 15497;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, SampleFiOSRightNaviHeader_MyCalendar, 352, 81, 329, 46, 64);
	List = 12646;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, List, 352, 174, 329, 179, 64);
	Login12 = 13174;
	nErr = Graphics.DrawImageExByID(iAttributeID, g_FDT_Main_Window_Handle, Login12, 356, 357, 321, 80, 64);
	Graphics.UpdateDisplay();
}
g_FDT_Last_Screen = 2;
// Browser KeyCode Variables;
KEY_UP = 38;
KEY_DOWN = 40;
KEY_LEFT =  37;
KEY_RIGHT = 39;
KEY_OK = 13;
KEY_PAGEUP = 33;
KEY_PAGEDOWN = 33;
KEY_INFO = 51;
// ######################## begin of text scrolling capability ##########################;
// Note: most important variables are scene #, key and g_FDT_Scroll_ElementIndex;
// ######################################################################################;
g_FDT_Screen_Count = g_FDT_Last_Screen;	// due to the preview in the onLoad;
g_FDT_Scroll_ElementIndex = g_FDT_Last_Screen;	// due to the preview in the onLoad; assuming total list items are the same as scene counts
function FDTHandleScrolling(scene, key) {
	if(scene == 1 && key == KEY_UP) {
		if(g_FDT_Scroll_ElementIndex == 1) {
			g_FDT_Scroll_BWDAllowed = false;
		} else {
			g_FDT_Scroll_BWDAllowed = true;
		}
		if(!g_FDT_Scroll_BWDAllowed) {
			g_FDT_Scroll_ElementIndex = 2;
		}
	}

	if(scene == 2 && key == KEY_DOWN) {
		lastElementIndex = getLastIndex(g_FDT_ListText10584);
		if(g_FDT_Scroll_ElementIndex == lastElementIndex + 0) {
			g_FDT_Scroll_FWDAllowed = false;
		} else {
			g_FDT_Scroll_FWDAllowed = true;
		}
		if(!g_FDT_Scroll_FWDAllowed) {
			g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex -1;
		}
	}

	Err = Graphics.ClearWindow(g_FDT_Text_Window_Handle);
}
function FDTHandleScrollingText(scene, key) {
if(scene == 1 && key == KEY_UP && g_FDT_Scroll_ElementIndex >= 1) {
FDTInitText(scene, key, g_FDT_Scroll_ElementIndex);
}else if (scene == 2-1 && key == KEY_UP && g_FDT_Scroll_ElementIndex == 2-1) {
FDTInitText(scene, key, g_FDT_Scroll_ElementIndex -2);
}else if (scene == 2&& key == KEY_DOWN && g_FDT_Scroll_ElementIndex >= 2+1) {
FDTGetNextText(scene, key, g_FDT_Scroll_ElementIndex);
}else if (scene == 2 && key == KEY_OK && g_FDT_Scroll_ElementIndex == 2) {
FDTInitText(scene, key, 1);
}
}
function FDTInitText(pageindex, key, index) {
}
function FDTGetNextText(pageindex, key, index){
}
// ######################## end of text scrolling capability ##########################;
function getLastIndex(t) {
	return t.length;
}
function FDTLoginGetAutoSceneStep() {
	step = offsetAutoScene/g_FDT_Last_Screen
	return step
}
var keyDown = function(event) {
	Graphics.ClearWindow(g_FDT_Text_Window_Handle);
	if(event.keyCode == KEY_UP) {
		if(g_FDT_Screen_Count < g_FDT_First_Screen + 1) {
			g_FDT_Screen_Count = g_FDT_First_Screen;
		} else {
			g_FDT_Screen_Count = g_FDT_Screen_Count - 1;
		}
			FDTHandleScrolling(g_FDT_Screen_Count, event.keyCode);
		g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex - 1;
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode);
debug.info('back allowed '+JSSafeString(g_FDT_Scroll_BWDAllowed)+' forward allowed '+JSSafeString(g_FDT_Scroll_FWDAllowed))
		debug.info('[Login]backw scene'+g_FDT_Screen_Count+' current index='+g_FDT_Scroll_ElementIndex)
	} else if (event.keyCode == KEY_DOWN) {
		if(g_FDT_Screen_Count > g_FDT_Last_Screen - 1) {
			g_FDT_Screen_Count = g_FDT_Last_Screen;
		} else {
			g_FDT_Screen_Count = g_FDT_Screen_Count + 1;
		}
			FDTHandleScrolling(g_FDT_Screen_Count, event.keyCode);
		g_FDT_Scroll_ElementIndex = g_FDT_Scroll_ElementIndex + 1;
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode);
debug.info('back allowed '+JSSafeString(g_FDT_Scroll_BWDAllowed)+' forward allowed '+JSSafeString(g_FDT_Scroll_FWDAllowed))
		debug.info('[Login]forw scene'+g_FDT_Screen_Count+' current index='+g_FDT_Scroll_ElementIndex)
	} else if (event.keyCode == KEY_LEFT) {
		debug.info('KEY_LEFT do nothing, as it is vertical list view')
	} else if (event.keyCode == KEY_RIGHT) {
		debug.info('KEY_RIGHT do nothing, as it is vertical list view')
	} else if (event.keyCode == KEY_OK) {
		FDTHandleScrollingText(g_FDT_Screen_Count, event.keyCode);
		debug.info('ok');
	} else if (event.keyCode == KEY_INFO) {
			--DrawBackground();
			debug.info('info');
	} else{
		debug.info('special key');
	}
	if(g_FDT_Screen_Count == 1) {
		FDTLoginScreen1();
	}
	if(g_FDT_Screen_Count == 2) {
		FDTLoginScreen2();
	}
	Graphics.UpdateDisplay();
}
function JSGetImageSrc(lImageID) {
var retVal
if(lImageID == 12646) {
retVal = 'img/lua/List.png'
}
else if(lImageID == 10376) {
retVal = 'img/lua/SampleFiOSBackground.png'
}
else if(lImageID == 13174) {
retVal = 'img/lua/Login12.PNG'
}
else if(lImageID == 18251) {
retVal = 'img/lua/SampleFiOSRightFooter.png'
}
else if(lImageID == 15497) {
retVal = 'img/lua/SampleFiOSRightNaviHeader_MyCalendar.png'
}
else if(lImageID == 15046) {
retVal = 'img/lua/Login11.PNG'
}
else if(lImageID == 11753) {
retVal = 'img/lua/SampleFiOSRightContHeader_MyCalendar.png'
}
else {
retVal = 'D:/Program Files/Verizon/Iris//Img/' + lImageID + '.png'
}
return retVal
}
debug.info('javascript done');
</SCRIPT></body></html>